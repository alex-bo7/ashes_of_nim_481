# this part of the script generated by deepseek
extends Camera3D

@export var ray_length: float = 1000
@export var gui: Node

func _input(event: InputEvent) -> void:
	if event is InputEventMouseButton and event.pressed and event.button_index == MOUSE_BUTTON_LEFT:
		var mouse_pos: Vector2 = event.position
		var from: Vector3 = project_ray_origin(mouse_pos)
		var to: Vector3 = from + project_ray_normal(mouse_pos) * ray_length
		
		var space_state: PhysicsDirectSpaceState3D = get_world_3d().direct_space_state
		var query: PhysicsRayQueryParameters3D = PhysicsRayQueryParameters3D.create(from, to)
		var result: Dictionary = space_state.intersect_ray(query)
		
		if result:
			var clicked_object: CollisionObject3D = result["collider"]
			#print_debug("Clicked on", clicked_object.name)
			handle_click(clicked_object)


func handle_click(object: CollisionObject3D) -> void:
	# Add your click handling logic here
	if object.has_method("on_click"):
		object.on_click()
		gui.update_gui()
# end generated script


const MOVE_SPEED: float = 0.33

func _process(delta: float) -> void:
	if Input.is_action_pressed("left"):
		position -= Vector3(MOVE_SPEED, 0, 0) * delta
	if Input.is_action_pressed("right"):
		position += Vector3(MOVE_SPEED, 0, 0) * delta
	if Input.is_action_pressed("up"):
		position += Vector3(0, MOVE_SPEED, 0) * delta
	if Input.is_action_pressed("down"):
		position -= Vector3(0, MOVE_SPEED, 0) * delta
	
	if Input.is_action_pressed("zoom_in"):
		position -= Vector3(0, 0, MOVE_SPEED) * delta
	if Input.is_action_pressed("zoom_out"):
		position += Vector3(0, 0, MOVE_SPEED) * delta
